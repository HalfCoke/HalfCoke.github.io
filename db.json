{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/404.webp","path":"img/404.webp","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/article.webp","path":"img/article.webp","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/background.webp","path":"img/background.webp","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/loader.gif","path":"img/loader.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/quotes.png","path":"img/quotes.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/img/qrcode.jpg","path":"img/qrcode.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/md5.min.js","path":"js/md5.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/common/animation.js","path":"js/common/animation.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/common/utils.js","path":"js/common/utils.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/layout/back-top.js","path":"js/layout/back-top.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/common/pack.js","path":"js/common/pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/layout/header.js","path":"js/layout/header.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/layout/loading.js","path":"js/layout/loading.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/layout/post.js","path":"js/layout/post.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/libs/lunr.min.js","path":"js/libs/lunr.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/libs/axios.min.js","path":"js/libs/axios.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/page/post.js","path":"js/page/post.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/js/page/search.js","path":"js/page/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/base/index.scss","path":"scss/base/index.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/about.scss","path":"scss/views/page/about.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/archive.scss","path":"scss/views/page/archive.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/error.scss","path":"scss/views/page/error.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/index.scss","path":"scss/views/page/index.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/category.scss","path":"scss/views/page/category.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/post.scss","path":"scss/views/page/post.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/search.scss","path":"scss/views/page/search.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/tag.scss","path":"scss/views/page/tag.scss","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.md","hash":"604861ed9bdc3d9b97528a7e758e89b85d218e76","modified":1604233762545},{"_id":"source/_posts/基于Hexo及GitHub在Windows下搭建个人博客.md","hash":"2b8f6b5294e6192c7edb1d72d560c2d116cb41a7","modified":1604312643829},{"_id":"source/_data/contact.yml","hash":"2c5f79e70e509a4fb531468b6932525d7b684146","modified":1604233343506},{"_id":"themes/hexo-theme-skapp/source/scss/base/_input.scss","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1604228243714},{"_id":"themes/hexo-theme-skapp/.gitignore","hash":"82ef2f3b23b55ea98c542341063157af2e059619","modified":1604228243672},{"_id":"themes/hexo-theme-skapp/_config.yml","hash":"6f0d550dd5823913a6d6a5774aacbe1f1adf9e93","modified":1604228243674},{"_id":"themes/hexo-theme-skapp/package.json","hash":"4e1b664cceaaad0d36238b8cc699bce37a656cfe","modified":1604228243696},{"_id":"themes/hexo-theme-skapp/languages/en.yml","hash":"1a4f5bce3b60ca76b0e905957172051900091299","modified":1604228243675},{"_id":"themes/hexo-theme-skapp/languages/zh-cn.yml","hash":"88757f002e1589fb18ad1747b92978d92dfe171d","modified":1604228243675},{"_id":"themes/hexo-theme-skapp/layout/_layout.swig","hash":"d223943a4ec0f183d4aeeb41bdbfd74bc2074820","modified":1604228243676},{"_id":"themes/hexo-theme-skapp/layout/archive.swig","hash":"eaf468f189f068af58805d8142055008b392d981","modified":1604228243693},{"_id":"themes/hexo-theme-skapp/layout/about.swig","hash":"9f6cea58373ddc0635ee2416fbcd8dad407bdfa7","modified":1604228243693},{"_id":"themes/hexo-theme-skapp/layout/category.swig","hash":"7fcb568f095d3c313cd2643e4b9933b62316d67f","modified":1604228243693},{"_id":"themes/hexo-theme-skapp/layout/error.swig","hash":"fa7acb45c6cf022a0a6e3736095444d9066706b3","modified":1604228243694},{"_id":"themes/hexo-theme-skapp/layout/post.swig","hash":"43984751ff19fc3976f5f15bf0c8a5dabffe7c53","modified":1604228243695},{"_id":"themes/hexo-theme-skapp/layout/index.swig","hash":"bfd8af9f057dbb6edb3af5c0ebdb18ecb0ad3a98","modified":1604228243694},{"_id":"themes/hexo-theme-skapp/layout/search.swig","hash":"6352de699394e756d529216181103f7e2e8ac1a0","modified":1604228243696},{"_id":"themes/hexo-theme-skapp/layout/tag.swig","hash":"48caf533976c533241d7a709931d2945303e2c36","modified":1604228243696},{"_id":"themes/hexo-theme-skapp/LICENSE","hash":"35e1d1fbdb2b983d6a269988411e626e2e49fc46","modified":1604228243673},{"_id":"themes/hexo-theme-skapp/scripts/helper.js","hash":"e5bb3f9b58b794349c4a25750f0bf1ab556a115d","modified":1604228243697},{"_id":"themes/hexo-theme-skapp/scripts/renderer.js","hash":"433f140c0d506b4b6807232872549451407ae527","modified":1604228243698},{"_id":"themes/hexo-theme-skapp/README-cn.md","hash":"3598c30bf4797ce98670b6299d6d28881d083a81","modified":1604228243673},{"_id":"themes/hexo-theme-skapp/README.md","hash":"16ad533b44c15789764f9bad3166421893628deb","modified":1604228243674},{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.svg","hash":"34f7c2b49d2f9339d944a7419989498b2cc2f76b","modified":1604228243700},{"_id":"themes/hexo-theme-skapp/source/img/404.webp","hash":"55e0ff50cbd87c0b566e41fef45835e9940ff95f","modified":1604241642278},{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.eot","hash":"87bd2f3e4f3b26d80fe97943b8deec98168affc2","modified":1604228243699},{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.woff","hash":"37b11e65abc366b2b4a212a302b36f7152921625","modified":1604228243701},{"_id":"themes/hexo-theme-skapp/source/fonts/iconfont.ttf","hash":"cbe6cffb573ef986e91c6705c9839a9c53edb1c8","modified":1604228243700},{"_id":"themes/hexo-theme-skapp/source/img/loader.gif","hash":"ed66db39f70b6240bd1cdcd8afa0d9c29cb2c7f3","modified":1604233116888},{"_id":"themes/hexo-theme-skapp/source/img/quotes.png","hash":"4510107c2b0ea522ac2dc2048cb7471b468af5ff","modified":1604228243703},{"_id":"themes/hexo-theme-skapp/source/img/logo.svg","hash":"42e804ebaf3c5be8571feeb49f3446164a5e5684","modified":1604229437206},{"_id":"themes/hexo-theme-skapp/source/img/qrcode.jpg","hash":"0c68fbbc66b27fc25210f99f89d3ace05b3d99a4","modified":1604232107154},{"_id":"themes/hexo-theme-skapp/source/js/md5.min.js","hash":"c27927a82941ba972c140abf26ad82e04c32d86a","modified":1604228243710},{"_id":"themes/hexo-theme-skapp/source/scss/_theme.scss","hash":"5d63a2c2a326d3951fbe4096fe11cfce380a514e","modified":1604228243712},{"_id":"themes/hexo-theme-skapp/layout/_partial/archive/main.swig","hash":"57c33af136eca2a0d83e01345304ee1e6b2f9275","modified":1604228243679},{"_id":"themes/hexo-theme-skapp/layout/_partial/about/main.swig","hash":"b2e0d54346244d8661a3a6948ea30d2d846ea3e6","modified":1604228243678},{"_id":"themes/hexo-theme-skapp/layout/_partial/category/main.swig","hash":"f2094d81620bc30cd2e5755ae0cff9517d52f602","modified":1604228243679},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/back-top.swig","hash":"97a248605facffc986ff5e06338ee3fe662b6a2b","modified":1604228243681},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/analytics.swig","hash":"381147862c6a50e987496c6bfdc06d36bad14d7a","modified":1604228243680},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/comment.swig","hash":"e329d86b02202dfc4751f7467dc8fe5315ed04f5","modified":1604284974166},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/error-header.swig","hash":"18ad4d1acd16ac1dc6c4be19149d7de6f8904abd","modified":1604228243681},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/head.swig","hash":"74756b1d58a2209049fcf5985adc95fb94d8c8ff","modified":1604228243682},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/footer.swig","hash":"0de251c0255aa2f788bab4765af43e4f3f5062a7","modified":1604233571944},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/header.swig","hash":"bdb9955afdc20ade2a8ea98130d360671538d182","modified":1604228243683},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/loader.swig","hash":"69b476a9d85929c1d9a37951003924d2185825a1","modified":1604228243683},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/math.swig","hash":"e4cb3dea80531201b7a6113fb2d08d389d16e63c","modified":1604228243684},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/prefetch.swig","hash":"06bb0e8583d08716a1e7e91bf149539b2aeb49f4","modified":1604228243685},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/small-header.swig","hash":"d17b47dbb91a476a6ecbe4dfaf45cc7e2efa568f","modified":1604228243686},{"_id":"themes/hexo-theme-skapp/layout/_partial/error/main.swig","hash":"04a96565937aeb86be41ce83c6ed78aa7653a6f7","modified":1604228243687},{"_id":"themes/hexo-theme-skapp/layout/_partial/common/sidebar.swig","hash":"b16da52d8f673202724539e5ed692cdd7ac12359","modified":1604228243686},{"_id":"themes/hexo-theme-skapp/layout/_partial/post/content.swig","hash":"4df14af0d958899c35bc7f667a443bf2c45b8d7a","modified":1604312444070},{"_id":"themes/hexo-theme-skapp/layout/_partial/post/main.swig","hash":"5895556b4852c5b355e3d4f77fddecc7c7511dce","modified":1604228243690},{"_id":"themes/hexo-theme-skapp/layout/_partial/post/mini.swig","hash":"c7fa61d557ddc51157d87ecf0a22d67561cfe3ed","modified":1604228243690},{"_id":"themes/hexo-theme-skapp/layout/_partial/index/main.swig","hash":"f2094d81620bc30cd2e5755ae0cff9517d52f602","modified":1604228243688},{"_id":"themes/hexo-theme-skapp/layout/_partial/post/post-statistical.swig","hash":"e160d861a4521f9ece0ed3575e958faad0b4068c","modified":1604228243690},{"_id":"themes/hexo-theme-skapp/layout/_partial/search/main.swig","hash":"d21af97d8128b781c11ef0ee00f6335cabd864ec","modified":1604228243691},{"_id":"themes/hexo-theme-skapp/layout/_partial/tag/main.swig","hash":"f2094d81620bc30cd2e5755ae0cff9517d52f602","modified":1604228243692},{"_id":"themes/hexo-theme-skapp/source/js/common/utils.js","hash":"d8b5ef7c7360ce2e5c2a96ccbc1e5f1494e69b04","modified":1604228243706},{"_id":"themes/hexo-theme-skapp/source/js/common/animation.js","hash":"6a1a7629612c4c2dc85a1d00ff538d00e493d3bb","modified":1604228243704},{"_id":"themes/hexo-theme-skapp/source/js/layout/back-top.js","hash":"e4014c0e03fc0c1e67f458526c143c9eea8a31b8","modified":1604228243707},{"_id":"themes/hexo-theme-skapp/source/js/layout/header.js","hash":"0264d36e2009d05850fd42760f285e87a3ea5be5","modified":1604228243707},{"_id":"themes/hexo-theme-skapp/source/js/common/pack.js","hash":"dab2804004a471e5df698eeae71b6ab2922e4443","modified":1604228243705},{"_id":"themes/hexo-theme-skapp/source/js/layout/loading.js","hash":"c60923eec07b75024692bd9aae410a0d8a3adce3","modified":1604228243708},{"_id":"themes/hexo-theme-skapp/source/js/layout/post.js","hash":"5a0c6c42f27ea5d723e0f008e0f44f1e4b031d13","modified":1604228243708},{"_id":"themes/hexo-theme-skapp/source/js/page/post.js","hash":"335f692d0c6c35dfee1f75868e1e29cfcdc1f529","modified":1604228243711},{"_id":"themes/hexo-theme-skapp/source/js/libs/lunr.min.js","hash":"ec9df958d5baa501684c434bb54a724f9b98eced","modified":1604228243710},{"_id":"themes/hexo-theme-skapp/source/scss/base/_element.scss","hash":"59381e14408e1c6d696147e7e8aa4ce261a8413d","modified":1604228243713},{"_id":"themes/hexo-theme-skapp/source/js/libs/axios.min.js","hash":"338a9f6113dec0b9ec84fee55c96a6014b889156","modified":1604228243709},{"_id":"themes/hexo-theme-skapp/source/scss/base/_font.scss","hash":"f04cf1809ceb46595bbc8c8dc98013a57010eab2","modified":1604228243714},{"_id":"themes/hexo-theme-skapp/source/scss/base/_js-toggle.scss","hash":"2144fd9dc98865e405fa3207829e8d1eea35988e","modified":1604228243715},{"_id":"themes/hexo-theme-skapp/source/js/page/search.js","hash":"0985dc97ebdf11fef3935d0d3504bfc7747a2fcc","modified":1604228243711},{"_id":"themes/hexo-theme-skapp/source/scss/base/_mixins.scss","hash":"823c6e5d56df0e0e926a8843400d8e3e34ff44dc","modified":1604228243715},{"_id":"themes/hexo-theme-skapp/source/scss/base/index.scss","hash":"da0bc6af7a87e768d68d3316e7611fb4d578a441","modified":1604228243716},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_back-top.scss","hash":"996e70395bc76abeb59b58832696ab21e9b3c632","modified":1604228243717},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_container.scss","hash":"7eebdf731c56ec33feb63fae505465d2cbd27447","modified":1604228243718},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_footer.scss","hash":"ac552e54f377d92153ae989a8934e54364b94595","modified":1604228243719},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_header.scss","hash":"219a554cdd706a0773230d6618b2271c419d1e2b","modified":1604228243720},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_index.scss","hash":"c74bc9b2f877c6d8fa29a6daa5136653ba1f7e35","modified":1604228243720},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_loading.scss","hash":"41591203dc41876e916399fbaae33ff6a79a080c","modified":1604228243721},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/about.scss","hash":"9e899e9162ce8db9ff99bbfe5ac9e90108b652e3","modified":1604228243724},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_mini-post.scss","hash":"f57131293aa60bafb9c81416fb44b5c311da4afc","modified":1604228243722},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_paginator.scss","hash":"43dd98f41c8a88732969f65fafca6b4f5b508b72","modified":1604228243722},{"_id":"themes/hexo-theme-skapp/source/scss/views/layout/_sidebar.scss","hash":"9ca8f0baeec9ba89662610684e33c8c8343416a5","modified":1604228243723},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/archive.scss","hash":"bc6fd08a9a5e5146e6405c1845858f6bd643817f","modified":1604228243725},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/index.scss","hash":"be170e52e6836afb4c3d22d789bddf7f091245a7","modified":1604228243727},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/category.scss","hash":"060931308b8ac3740ca3928afeb6246041cf9a84","modified":1604228243725},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/post.scss","hash":"8fc1ae6d180ce9d494fb877144f16e1e3030a6aa","modified":1604228243727},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/error.scss","hash":"c708ce4d926460d2dfdc7af56b69915a32f3da7a","modified":1604228243726},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/search.scss","hash":"38f55dbfe22fae61c7c18eb9f3dc72207fd9b28c","modified":1604228243728},{"_id":"themes/hexo-theme-skapp/source/scss/views/page/tag.scss","hash":"060931308b8ac3740ca3928afeb6246041cf9a84","modified":1604228243728},{"_id":"themes/hexo-theme-skapp/source/img/article.webp","hash":"d463298dd3a2b1ce5b2cdd87e583081433187c50","modified":1604232512985},{"_id":"themes/hexo-theme-skapp/source/img/background.webp","hash":"473b207456382711e58a1bddda435add226b6823","modified":1604242032887},{"_id":"public/fonts/iconfont.svg","hash":"b606414ee9d4fe20d41c53b4ae66b58d1e8d40a2","modified":1604312169052},{"_id":"public/img/404.webp","hash":"37260418f6be9a683426baa1b3e32d7bba1eb487","modified":1604312169052},{"_id":"public/img/article.webp","hash":"bf03b3f20d6c15c5faf7fbd356c479baeee472e4","modified":1604312169052},{"_id":"public/img/background.webp","hash":"6d403108d4c5b4b27f4ff37bc04353fccd908eb2","modified":1604312169052},{"_id":"public/img/logo.svg","hash":"4439dea8db66ca2191bd45b52b3c324c6c7b99da","modified":1604312169052},{"_id":"public/img/quotes.png","hash":"d971044cf4d14bc81e63c5a9f9528832fab378cf","modified":1604312169052},{"_id":"public/img/qrcode.jpg","hash":"bcc3cc0f2f9239ec48052c07a802764f1ee68418","modified":1604312169052},{"_id":"public/atom.xml","hash":"63becbe29cb3eb0f0a02eb713370f0b5f67b0bb3","modified":1604312663684},{"_id":"public/sitemap.xml","hash":"958cf7bbb8f1202373b8a4fc51eabe7392795f4f","modified":1604312169052},{"_id":"public/assets/lunr/2020.json","hash":"d7a3b535c72c3523d6dacff1521a4edb718c7d21","modified":1604312663684},{"_id":"public/assets/lunr/all.json","hash":"d7a3b535c72c3523d6dacff1521a4edb718c7d21","modified":1604312663684},{"_id":"public/404.html","hash":"713913b432fdb4ded741a1f7847c304213469d6d","modified":1604312169052},{"_id":"public/2020/fa08f4c5/index.html","hash":"c60d81b6ae730512ad6bb5c82755a4d37bf3a0e8","modified":1604312663684},{"_id":"public/archives/index.html","hash":"2497a2a9f59a8699d9f8eea45974a1f27f1980a5","modified":1604312663684},{"_id":"public/archives/2020/index.html","hash":"0d52e1125ca1a560c2e8ead138ef255a2694883e","modified":1604312663684},{"_id":"public/archives/2020/11/index.html","hash":"40c340e584bb63487e9370baf8f6afa778a25e61","modified":1604312663684},{"_id":"public/categories/WEB部署/index.html","hash":"74e25649f288d793e1f17da6e5ca83cb7e172441","modified":1604312663684},{"_id":"public/tags/Hexo/index.html","hash":"f1fb360424d65ecb4b5671b859e306a71ac7a925","modified":1604312663684},{"_id":"public/tags/GitHub/index.html","hash":"333cbe5e75d3a7b8f3cd786e72f1911893cfed5f","modified":1604312663684},{"_id":"public/tags/Windows/index.html","hash":"6020c1fb361223fa4936543dd95babac83128796","modified":1604312663684},{"_id":"public/tags/图床/index.html","hash":"a4715956592719ff1dfd6d31c72705e16fe6e082","modified":1604312663684},{"_id":"public/index.html","hash":"193b0ad25e1d97bfd3dc7c39074cd3ad1eaa3e60","modified":1604312663684},{"_id":"public/js/common.js","hash":"eb3f1a8a8d25935b4f159d460baf8f2a370b41e8","modified":1604312169052},{"_id":"public/fonts/iconfont.ttf","hash":"cbe6cffb573ef986e91c6705c9839a9c53edb1c8","modified":1604312169052},{"_id":"public/fonts/iconfont.woff","hash":"37b11e65abc366b2b4a212a302b36f7152921625","modified":1604312169052},{"_id":"public/fonts/iconfont.eot","hash":"87bd2f3e4f3b26d80fe97943b8deec98168affc2","modified":1604312169052},{"_id":"public/img/loader.gif","hash":"ed66db39f70b6240bd1cdcd8afa0d9c29cb2c7f3","modified":1604312169052},{"_id":"public/scss/views/page/about.css","hash":"f90ae1b4cf6af7fce11b5a43d7c603932578516d","modified":1604312169052},{"_id":"public/scss/base/index.css","hash":"b5f7aac502c5cce0034f655e816ff1f034bbf191","modified":1604312169052},{"_id":"public/scss/views/page/archive.css","hash":"792d23471a6ca60d82623dccb4db975110c98a5e","modified":1604312169052},{"_id":"public/scss/views/page/error.css","hash":"6c5d23595bf4b2c13ffd4ed91c64d5cb980c1010","modified":1604312169052},{"_id":"public/scss/views/page/post.css","hash":"bd314e8bd996bef7e74343eda4a0b4c82307cec8","modified":1604312169052},{"_id":"public/scss/views/page/category.css","hash":"7e3731ded7a245d6a8f7f15ca25ec2e0eb183859","modified":1604312169052},{"_id":"public/scss/views/page/search.css","hash":"1e078b0236d167f8c3090db50345e249a42d8f0d","modified":1604312169052},{"_id":"public/scss/views/page/index.css","hash":"7e3731ded7a245d6a8f7f15ca25ec2e0eb183859","modified":1604312169052},{"_id":"public/scss/views/page/tag.css","hash":"7e3731ded7a245d6a8f7f15ca25ec2e0eb183859","modified":1604312169052},{"_id":"public/js/common/animation.js","hash":"e20bd33dcf4f7d9834ef3809d9c34f2577198ae8","modified":1604312169052},{"_id":"public/js/md5.min.js","hash":"21c2a499f862150d66ecbf728623f8d6cb0bfb3a","modified":1604312169052},{"_id":"public/js/layout/back-top.js","hash":"9228f4a4dd49486090b9c5943b1f28a75aa74c68","modified":1604312169052},{"_id":"public/js/common/pack.js","hash":"7e59daf725f6b324d45fcdc04bb32ae73e553a65","modified":1604312169052},{"_id":"public/js/layout/header.js","hash":"15c354ac06c2886f0ef80c1fa0a037d7086e8278","modified":1604312169052},{"_id":"public/js/common/utils.js","hash":"39162db90c091127d796a3b7df7c7754ec49233b","modified":1604312169052},{"_id":"public/js/layout/loading.js","hash":"4678f71ab17f627c14df93d64876ec6256a62890","modified":1604312169052},{"_id":"public/js/layout/post.js","hash":"d283b30fec045c8f597122ef1188f192061663d6","modified":1604312169052},{"_id":"public/js/page/post.js","hash":"d7f9aab4ace1a8090872bf15c71ae7e37218d360","modified":1604312169052},{"_id":"public/js/libs/lunr.min.js","hash":"d4a1bcd3d4e5de75caf002948ee6059241811cc6","modified":1604312169052},{"_id":"public/js/libs/axios.min.js","hash":"76e76191dab7742e6a189506660a435115780184","modified":1604312169052},{"_id":"public/js/page/search.js","hash":"408f84470f774c90db99408db22571b53474fad6","modified":1604312169052}],"Category":[{"name":"WEB部署","_id":"ckh0e1mg500026ksmerj808zx"}],"Data":[{"_id":"contact","data":[{"title":"github","icon":"icon-github","link":"https://github.com/HalfCoke"},{"title":"email","icon":"icon-email","link":"mailto:halfcoke@163.com"}]}],"Page":[{"title":"404 Page Not Found","type":"error","layout":"error","_content":"","source":"404.md","raw":"---\ntitle: 404 Page Not Found\ntype: error\nlayout: error\n---","date":"2020-11-01T12:29:22.545Z","updated":"2020-11-01T12:29:22.545Z","path":"404.html","comments":1,"_id":"ckh0e1mfn00006ksmgsl5hctg","content":"","site":{"data":{"contact":[{"title":"github","icon":"icon-github","link":"https://github.com/HalfCoke"},{"title":"email","icon":"icon-email","link":"mailto:halfcoke@163.com"}]}},"excerpt":"","more":""}],"Post":[{"title":"基于Hexo及GitHub在Windows下搭建个人博客","subtitle":"使用Hexo及GitHub在Windows下部署个人博客，利用GitHub做图床，将图片保存至GitHub","cover":"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/20201102182344.png","author":{"nick":"HalfCoke","link":"https://halfcoke.github.io/"},"typora-copy-images-to":"upload","abbrlink":"fa08f4c5","date":"2020-11-02T03:44:06.000Z","_content":"\n# 基于Hexo及GitHub在Windows下搭建个人博客\n\n## Hexo安装\n\nHexo[官网](https://hexo.io/zh-cn/)提供了一些[安装说明](https://hexo.io/zh-cn/docs/)，但是有些部分不够清晰，对新手不够友好。接下来我们在Windows环境下安装Hexo。\n\n我会先介绍Hexo如何安装，然后在后文再介绍如何进行配置Hexo以及如何安装主题，如何设置图床等。\n\n### Hexo安装前\n\n在Hexo安装前需要安装下列环境：\n\n- [Node.js](https://nodejs.org/zh-cn/)\n- [GIt](https://git-scm.com/)\n\n#### Node.js安装及验证\n\n1. 下载\n\n   当前Node.js官网[https://nodejs.org/zh-cn/](https://nodejs.org/zh-cn/)所提供的下载版本为14.15.0，可直接[点击下载](https://nodejs.org/dist/v14.15.0/node-v14.15.0-x64.msi)。\n\n![image-20201102132645990](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102132645990.png)\n\n2. 安装\n\n   下载完成后，直接使用默认设置一直`next`就可以，安装路径自行更改。\n\n![image-20201102133232192](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102133232192.png)\n\n3. 验证\n\n   使用`WIN+R`打开运行，输入`cmd`，然后输入`npm -v`验证是否安装成功。如下图所示则没有问题。\n\n   ![image-20201102133438956](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102133438956.png)\n\n#### Git安装\n\n1. 下载\n\n   Git下载页面为[https://git-scm.com/downloads](https://git-scm.com/downloads)，可直接[点击下载](https://github.com/git-for-windows/git/releases/download/v2.29.2.windows.1/Git-2.29.2-64-bit.exe)，下载2.29.2 64位版本。\n\n2. 安装\n\n   如果有其他Git需求的用户可以搜索Git安装教程，如果没有其他需求直接默认配置安装。\n\n3. 验证\n\n   安装完成后，重新打开cmd，输入`git --version`，应该出现如下提示。\n\n   ![image-20201102134311394](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102134311394.png)\n   \n4. 初始化配置\n\n   首次安装git需要对git进行配置\n\n   ```bash\n   git config --global user.name \"halfcoke\"\n   git config --global user.email halfcoke@163.com\n   ```\n\n   如果你后续想修改这个配置，可以重新执行一次，或者在`C:\\Users\\<你的用户名>\\.gitconfig`文件中修改\n\n### Hexo安装\n\nHexo需要在本地有一个文件夹，来存放与自己博客有关的内容，这个文件夹不能删除，之后写博客也需要继续用到，后续会说明如何在云端保存这个文件夹，现在我们主要说明如何安装Hexo。\n\n1. 在一个你喜欢的地方新建一个文件夹\n\n   ![image-20201102134745775](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102134745775.png)\n\n2. 安装Hexo\n\n   我们可以使用`git bash`在这个文件夹中打开命令行窗口，或者使用`cmd`进入当前路径。然后输入：\n\n   ```bash\n   npm install -g hexo-cli\n   ```\n\n   然后输入来验证安装：\n\n   ```bash\n   hexo version\n   ```\n\n   应该输出：\n\n   ![image-20201102142055989](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102142055989.png)\n\n3. 初始化\n\n   使用如下命令对Hexo进行初始化。\n\n   ```bash\n   hexo init your_blog_name\n   cd your_blog_name\n   npm install\n   ```\n\n4. 验证安装\n\n   依次执行如下命令：\n\n   ```bash\n   hexo g  # 生成页面\n   hexo server # 在本地测试\n   ```\n\n   最后应该会出现这样的提示：\n\n   ![image-20201102142855559](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102142855559.png)\n\n   在你的浏览器中输入`localhost:4000`。\n\n   至此你的第一个页面应该生成完成了。\n\n   ![image-20201102143050036](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102143050036.png)\n\n   但是这页面也太简单了！！！\n\n   好吧，接下来我们看一下如何进行配置，以及如何部署到GitHub上。\n\n## Hexo部署到GitHub\n\n为了连续性，我们先讲如何将Hexo部署到GitHub，这样后续配置完的页面你自己就会部署到GitHub上了。\n\nHexo部署到GitHub非常简单，但是需要先在GitHub上创建属于自己的仓库。\n\n### GitHub相关\n\n如果你会GitHub相关的操作，那么直接创建一个你自己的公开仓库，然后跳到下一节，命名格式如下：\n\n```bash\nyour_repo.github.io   # 对 仓库名叫这个，<your_repo>设置为你自己GitHub的用户名\n```\n\n如果你不会GitHub，往下看：\n\n1. 进入[GitHub](https://github.com/)，注册属于自己的账号，或者直接点击到[注册页面](https://github.com/join?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F&source=header-home)。\n\n2. 然后登录进去，按下图点击创建一个仓库\n\n   ![image-20201102143936299](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102143936299.png)\n\n3. 在下图红框的位置填入自己GitHub的名字，后续可以直接通过这个域名访问自己的博客(当然也可以通过其他方式自定义，这个后续再说)。\n\n   比如我的这个账号的就是`halfcokey`\n\n   ![image-20201102151749812](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102151749812.png)\n   \n   关于GitHub就差不多这样了，接下来我们配置一下Hexo\n\n### Hexo相关\n\n在我们刚才初始化Hexo的文件夹中，找到`_config.yml`，不要用记事本打开，你可以下载个[VS Code](https://code.visualstudio.com/)或者[Sublime](https://www.sublimetext.com/)等一类的都行。\n\n拉到最下面找到`deploy`，进行类似如下的配置，注意`yaml`文件依靠缩进，并且在`:`后有空格，一定要注意格式：\n\n```yml\ndeploy:\n  type: git\n  repo: https://github.com/halfcokey/halfcokey.github.io.git # 你刚才新建的那个仓库的链接\n  branch: master\n```\n\n更详细的说明及配置可以[参考官网](https://hexo.io/zh-cn/docs/one-command-deployment#Git)。\n\n然后，在这个路径下打开`cmd`，执行如下命令安装部署插件：\n\n```bash\nnpm install hexo-deployer-git --save\n```\n\n\n\n### 部署\n\n这个时候你可以执行如下命令来进行部署你的个人网站：\n\n```bash\nhexo d\n```\n\n应该可以弹出让你输入账号或者授权的页面，点击授权即可。\n\n这个时候，你就可以通过`<your_repo>.github.io`来访问你的页面了，比如我的就是[halfcoke.github.io](https://halfcoke.github.io)\n\n## Hexo安装及部署命令总结\n\n如果你对上面执行的这些命令好奇，想查看具体说明的话，可以查看[官网](https://hexo.io/zh-cn/docs/commands)\n\n这些命令在之后写文章可能也会用到，所以还是需要了解一下都是什么意思\n\n```bash\n# 初始化你的博客\nhexo init <folder>\n# 生成静态文件\nhexo g\n# 部署网站\nhexo d\n#################\n# 这里是一些上面没有用到的命令，但之后可能会用到\n# 新建一篇标题为title的文章，这默认放在source/_posts文件夹下\nhexo n \"title\"\n# 清除缓存文件，如果更换主题等，建议执行一次\nhexo clean\n```\n\n更详细的命令介绍请直接[点击官网](https://hexo.io/zh-cn/docs/commands)查看。\n\n## Hexo配置\n\n### 基本配置\n\nHexo配置项有很多内容，详细的可以查看[官网](https://hexo.io/zh-cn/docs/configuration)，下面我介绍一些我修改了的配置。在安装主题之后，还会再修改一些配置，我会在主题安装那里再介绍。\n\n```yml\ntitle: 'CCCCCoke' # 自己网站的名字\nlanguage: zh_cn # 网站语言\ntimezone: 'Asia/ShangHai' # 时区\nurl: https://HalfCoke.github.io  # 改成自己的地址\n```\n\n## Hexo本地文件夹上传\n\n我在部署Hexo的时候第一个问题就是如果我的Hexo文件夹丢失了怎么办。因为从GitHub上看到，通过`hexo d`上传的只有我们的静态页面，所以我们就需要将Hexo的文件夹上传到云端，这样我们换了一个环境后也能无差别的编辑自己的博客，而且最好方便管理而且别太麻烦。\n\n在这里我参考了网上其他人的做法，就是在存放自己博客的GitHub仓库新建一个分支`hexo`来存放这些文件。\n\n具体步骤如下：\n\n首先建议先创建`.editorconfig`文件，方便你在使用各种IDE编辑的时候配置统一，这里不做过多介绍，文件内容如下：\n\n```ini\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\n```\n\n然后，在自己博客的目录(比如我的是`d:\\Blog\\blog_test`)，打开`cmd`或`git bash`，然后执行如下命令：\n\n```bash\ngit init # 初始化git仓库\ngit add . # 将当前文件添加进去\ngit commit -m \"init\" # 在本地提交\n\n# 添加远程仓库，注意将halfcokey替换为自己的用户名\ngit remote add origin https://github.com/halfcokey/halfcokey.github.io.git\n\n# 创建分支，以后的文件直接在这个分支进行提交\ngit checkout -b \"hexo\" \n# 将本地分支推送到远程仓库,并进行关联。\ngit push -u origin hexo\n```\n\n在之后修改文件，只需要执行如下命令即可：\n\n```bash\ngit commit -a -m \"修改...\" # 这里建议填写一些有意义的备注\ngit push origin hexo\n```\n\n## MarkDown文章图片自动上传GitHub\n\n在使用MarkDown编辑的博客的时候，如果文章中的图片数量比较少，还可以手动的将图片传到图床上，然后再添加图片链接。但如果你想放很多图片，手动就麻烦的要死。\n\n在这里我使用[Typora](https://typora.io/)+[PicGo](https://molunerfinn.com/PicGo/)的方式来管理文章的图片。\n\n这两个软件的安装过程比较简单，下面主要说一下我进行配置的相关的内容。\n\n### PicGo\n\nPicGo的配置方式比较容易，我们选择`GitHub图床`\n\n看到我们需要填写`仓库名`、`分支名`、`Token`这些信息，下面我们分别介绍一下。\n\n![image-20201102164205931](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164205931.png)\n\n1. 仓库名\n\n   我们可以新建一个仓库专门用来存放图片，新建仓库的方式与之前相同，但是这是我们的仓库名就没有那么多限制了，可以随便起，我的创建的仓库名是[blog_img](https://github.com/HalfCoke/blog_img)，然后在这个位置填入`<用户名>/<仓库名>`\n\n2. 分支名\n\n   默认使用master就行\n\n3. Token\n\n   在GitHub自己头像的位置点击`settings`，或者直接点击[https://github.com/settings/profile](https://github.com/settings/profile)\n\n   ![image-20201102164652421](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164652421.png)\n\n   然后点击`Developer settings->Personal access tokens`，或者直接点击[https://github.com/settings/tokens](https://github.com/settings/tokens)\n\n   ![image-20201102164803092](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164803092.png)\n\n   然后点击`Generate new token`\n\n   ![image-20201102165048712](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102165048712.png)\n\n   在Note的位置随便输入一个名字，下面的权限选第一个应该就行，如果前两个都选上。拉到最下面点击生成。\n\n   ![image-20201102165252125](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102165252125.png)\n\n   这时会有这样的提示，把这一串复制填写在PicGo的Token中，这样就可以了。\n\n   ![image-20201102165419821](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102165419821.png)\n\n### Typora\n\n[Typora](https://typora.io/)直接支持使用[PicGo](https://molunerfinn.com/PicGo/)。在`文件->偏好设置`中进行如下配置，主要是红框的位置\n\n![image-20201102164000589](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164000589.png)\n\n然后当你打开一个MarkDown文件的时候，点击Typora的`格式->图像->当插入本地图片时->上传图片`就可以了。这样你放进来的图片就会自动上传到你的仓库中，而且链接也会替换成在线链接。\n\n## 其他\n\n### Hexo主题配置\n\n我所使用的主题是[[hexo-theme-skapp](https://github.com/Mrminfive/hexo-theme-skapp)]，作者提供了比较详细的配置过程，大家可以直接参考。","source":"_posts/基于Hexo及GitHub在Windows下搭建个人博客.md","raw":"---\ntitle: 基于Hexo及GitHub在Windows下搭建个人博客\nsubtitle: 使用Hexo及GitHub在Windows下部署个人博客，利用GitHub做图床，将图片保存至GitHub\ncover: https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/20201102182344.png\ntags:\n  - Hexo\n  - GitHub\n  - Windows\n  - 图床\ncategories:\n  - WEB部署\nauthor:\n  nick: HalfCoke\n  link: 'https://halfcoke.github.io/'\ntypora-copy-images-to: upload\nabbrlink: fa08f4c5\ndate: 2020-11-02 11:44:06\n---\n\n# 基于Hexo及GitHub在Windows下搭建个人博客\n\n## Hexo安装\n\nHexo[官网](https://hexo.io/zh-cn/)提供了一些[安装说明](https://hexo.io/zh-cn/docs/)，但是有些部分不够清晰，对新手不够友好。接下来我们在Windows环境下安装Hexo。\n\n我会先介绍Hexo如何安装，然后在后文再介绍如何进行配置Hexo以及如何安装主题，如何设置图床等。\n\n### Hexo安装前\n\n在Hexo安装前需要安装下列环境：\n\n- [Node.js](https://nodejs.org/zh-cn/)\n- [GIt](https://git-scm.com/)\n\n#### Node.js安装及验证\n\n1. 下载\n\n   当前Node.js官网[https://nodejs.org/zh-cn/](https://nodejs.org/zh-cn/)所提供的下载版本为14.15.0，可直接[点击下载](https://nodejs.org/dist/v14.15.0/node-v14.15.0-x64.msi)。\n\n![image-20201102132645990](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102132645990.png)\n\n2. 安装\n\n   下载完成后，直接使用默认设置一直`next`就可以，安装路径自行更改。\n\n![image-20201102133232192](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102133232192.png)\n\n3. 验证\n\n   使用`WIN+R`打开运行，输入`cmd`，然后输入`npm -v`验证是否安装成功。如下图所示则没有问题。\n\n   ![image-20201102133438956](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102133438956.png)\n\n#### Git安装\n\n1. 下载\n\n   Git下载页面为[https://git-scm.com/downloads](https://git-scm.com/downloads)，可直接[点击下载](https://github.com/git-for-windows/git/releases/download/v2.29.2.windows.1/Git-2.29.2-64-bit.exe)，下载2.29.2 64位版本。\n\n2. 安装\n\n   如果有其他Git需求的用户可以搜索Git安装教程，如果没有其他需求直接默认配置安装。\n\n3. 验证\n\n   安装完成后，重新打开cmd，输入`git --version`，应该出现如下提示。\n\n   ![image-20201102134311394](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102134311394.png)\n   \n4. 初始化配置\n\n   首次安装git需要对git进行配置\n\n   ```bash\n   git config --global user.name \"halfcoke\"\n   git config --global user.email halfcoke@163.com\n   ```\n\n   如果你后续想修改这个配置，可以重新执行一次，或者在`C:\\Users\\<你的用户名>\\.gitconfig`文件中修改\n\n### Hexo安装\n\nHexo需要在本地有一个文件夹，来存放与自己博客有关的内容，这个文件夹不能删除，之后写博客也需要继续用到，后续会说明如何在云端保存这个文件夹，现在我们主要说明如何安装Hexo。\n\n1. 在一个你喜欢的地方新建一个文件夹\n\n   ![image-20201102134745775](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102134745775.png)\n\n2. 安装Hexo\n\n   我们可以使用`git bash`在这个文件夹中打开命令行窗口，或者使用`cmd`进入当前路径。然后输入：\n\n   ```bash\n   npm install -g hexo-cli\n   ```\n\n   然后输入来验证安装：\n\n   ```bash\n   hexo version\n   ```\n\n   应该输出：\n\n   ![image-20201102142055989](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102142055989.png)\n\n3. 初始化\n\n   使用如下命令对Hexo进行初始化。\n\n   ```bash\n   hexo init your_blog_name\n   cd your_blog_name\n   npm install\n   ```\n\n4. 验证安装\n\n   依次执行如下命令：\n\n   ```bash\n   hexo g  # 生成页面\n   hexo server # 在本地测试\n   ```\n\n   最后应该会出现这样的提示：\n\n   ![image-20201102142855559](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102142855559.png)\n\n   在你的浏览器中输入`localhost:4000`。\n\n   至此你的第一个页面应该生成完成了。\n\n   ![image-20201102143050036](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102143050036.png)\n\n   但是这页面也太简单了！！！\n\n   好吧，接下来我们看一下如何进行配置，以及如何部署到GitHub上。\n\n## Hexo部署到GitHub\n\n为了连续性，我们先讲如何将Hexo部署到GitHub，这样后续配置完的页面你自己就会部署到GitHub上了。\n\nHexo部署到GitHub非常简单，但是需要先在GitHub上创建属于自己的仓库。\n\n### GitHub相关\n\n如果你会GitHub相关的操作，那么直接创建一个你自己的公开仓库，然后跳到下一节，命名格式如下：\n\n```bash\nyour_repo.github.io   # 对 仓库名叫这个，<your_repo>设置为你自己GitHub的用户名\n```\n\n如果你不会GitHub，往下看：\n\n1. 进入[GitHub](https://github.com/)，注册属于自己的账号，或者直接点击到[注册页面](https://github.com/join?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F&source=header-home)。\n\n2. 然后登录进去，按下图点击创建一个仓库\n\n   ![image-20201102143936299](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102143936299.png)\n\n3. 在下图红框的位置填入自己GitHub的名字，后续可以直接通过这个域名访问自己的博客(当然也可以通过其他方式自定义，这个后续再说)。\n\n   比如我的这个账号的就是`halfcokey`\n\n   ![image-20201102151749812](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102151749812.png)\n   \n   关于GitHub就差不多这样了，接下来我们配置一下Hexo\n\n### Hexo相关\n\n在我们刚才初始化Hexo的文件夹中，找到`_config.yml`，不要用记事本打开，你可以下载个[VS Code](https://code.visualstudio.com/)或者[Sublime](https://www.sublimetext.com/)等一类的都行。\n\n拉到最下面找到`deploy`，进行类似如下的配置，注意`yaml`文件依靠缩进，并且在`:`后有空格，一定要注意格式：\n\n```yml\ndeploy:\n  type: git\n  repo: https://github.com/halfcokey/halfcokey.github.io.git # 你刚才新建的那个仓库的链接\n  branch: master\n```\n\n更详细的说明及配置可以[参考官网](https://hexo.io/zh-cn/docs/one-command-deployment#Git)。\n\n然后，在这个路径下打开`cmd`，执行如下命令安装部署插件：\n\n```bash\nnpm install hexo-deployer-git --save\n```\n\n\n\n### 部署\n\n这个时候你可以执行如下命令来进行部署你的个人网站：\n\n```bash\nhexo d\n```\n\n应该可以弹出让你输入账号或者授权的页面，点击授权即可。\n\n这个时候，你就可以通过`<your_repo>.github.io`来访问你的页面了，比如我的就是[halfcoke.github.io](https://halfcoke.github.io)\n\n## Hexo安装及部署命令总结\n\n如果你对上面执行的这些命令好奇，想查看具体说明的话，可以查看[官网](https://hexo.io/zh-cn/docs/commands)\n\n这些命令在之后写文章可能也会用到，所以还是需要了解一下都是什么意思\n\n```bash\n# 初始化你的博客\nhexo init <folder>\n# 生成静态文件\nhexo g\n# 部署网站\nhexo d\n#################\n# 这里是一些上面没有用到的命令，但之后可能会用到\n# 新建一篇标题为title的文章，这默认放在source/_posts文件夹下\nhexo n \"title\"\n# 清除缓存文件，如果更换主题等，建议执行一次\nhexo clean\n```\n\n更详细的命令介绍请直接[点击官网](https://hexo.io/zh-cn/docs/commands)查看。\n\n## Hexo配置\n\n### 基本配置\n\nHexo配置项有很多内容，详细的可以查看[官网](https://hexo.io/zh-cn/docs/configuration)，下面我介绍一些我修改了的配置。在安装主题之后，还会再修改一些配置，我会在主题安装那里再介绍。\n\n```yml\ntitle: 'CCCCCoke' # 自己网站的名字\nlanguage: zh_cn # 网站语言\ntimezone: 'Asia/ShangHai' # 时区\nurl: https://HalfCoke.github.io  # 改成自己的地址\n```\n\n## Hexo本地文件夹上传\n\n我在部署Hexo的时候第一个问题就是如果我的Hexo文件夹丢失了怎么办。因为从GitHub上看到，通过`hexo d`上传的只有我们的静态页面，所以我们就需要将Hexo的文件夹上传到云端，这样我们换了一个环境后也能无差别的编辑自己的博客，而且最好方便管理而且别太麻烦。\n\n在这里我参考了网上其他人的做法，就是在存放自己博客的GitHub仓库新建一个分支`hexo`来存放这些文件。\n\n具体步骤如下：\n\n首先建议先创建`.editorconfig`文件，方便你在使用各种IDE编辑的时候配置统一，这里不做过多介绍，文件内容如下：\n\n```ini\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\n```\n\n然后，在自己博客的目录(比如我的是`d:\\Blog\\blog_test`)，打开`cmd`或`git bash`，然后执行如下命令：\n\n```bash\ngit init # 初始化git仓库\ngit add . # 将当前文件添加进去\ngit commit -m \"init\" # 在本地提交\n\n# 添加远程仓库，注意将halfcokey替换为自己的用户名\ngit remote add origin https://github.com/halfcokey/halfcokey.github.io.git\n\n# 创建分支，以后的文件直接在这个分支进行提交\ngit checkout -b \"hexo\" \n# 将本地分支推送到远程仓库,并进行关联。\ngit push -u origin hexo\n```\n\n在之后修改文件，只需要执行如下命令即可：\n\n```bash\ngit commit -a -m \"修改...\" # 这里建议填写一些有意义的备注\ngit push origin hexo\n```\n\n## MarkDown文章图片自动上传GitHub\n\n在使用MarkDown编辑的博客的时候，如果文章中的图片数量比较少，还可以手动的将图片传到图床上，然后再添加图片链接。但如果你想放很多图片，手动就麻烦的要死。\n\n在这里我使用[Typora](https://typora.io/)+[PicGo](https://molunerfinn.com/PicGo/)的方式来管理文章的图片。\n\n这两个软件的安装过程比较简单，下面主要说一下我进行配置的相关的内容。\n\n### PicGo\n\nPicGo的配置方式比较容易，我们选择`GitHub图床`\n\n看到我们需要填写`仓库名`、`分支名`、`Token`这些信息，下面我们分别介绍一下。\n\n![image-20201102164205931](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164205931.png)\n\n1. 仓库名\n\n   我们可以新建一个仓库专门用来存放图片，新建仓库的方式与之前相同，但是这是我们的仓库名就没有那么多限制了，可以随便起，我的创建的仓库名是[blog_img](https://github.com/HalfCoke/blog_img)，然后在这个位置填入`<用户名>/<仓库名>`\n\n2. 分支名\n\n   默认使用master就行\n\n3. Token\n\n   在GitHub自己头像的位置点击`settings`，或者直接点击[https://github.com/settings/profile](https://github.com/settings/profile)\n\n   ![image-20201102164652421](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164652421.png)\n\n   然后点击`Developer settings->Personal access tokens`，或者直接点击[https://github.com/settings/tokens](https://github.com/settings/tokens)\n\n   ![image-20201102164803092](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164803092.png)\n\n   然后点击`Generate new token`\n\n   ![image-20201102165048712](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102165048712.png)\n\n   在Note的位置随便输入一个名字，下面的权限选第一个应该就行，如果前两个都选上。拉到最下面点击生成。\n\n   ![image-20201102165252125](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102165252125.png)\n\n   这时会有这样的提示，把这一串复制填写在PicGo的Token中，这样就可以了。\n\n   ![image-20201102165419821](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102165419821.png)\n\n### Typora\n\n[Typora](https://typora.io/)直接支持使用[PicGo](https://molunerfinn.com/PicGo/)。在`文件->偏好设置`中进行如下配置，主要是红框的位置\n\n![image-20201102164000589](https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164000589.png)\n\n然后当你打开一个MarkDown文件的时候，点击Typora的`格式->图像->当插入本地图片时->上传图片`就可以了。这样你放进来的图片就会自动上传到你的仓库中，而且链接也会替换成在线链接。\n\n## 其他\n\n### Hexo主题配置\n\n我所使用的主题是[[hexo-theme-skapp](https://github.com/Mrminfive/hexo-theme-skapp)]，作者提供了比较详细的配置过程，大家可以直接参考。","slug":"基于Hexo及GitHub在Windows下搭建个人博客","published":1,"updated":"2020-11-02T10:24:03.829Z","_id":"ckh0e1mg200016ksm8is2gupf","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"基于Hexo及GitHub在Windows下搭建个人博客\"><a href=\"#基于Hexo及GitHub在Windows下搭建个人博客\" class=\"headerlink\" title=\"基于Hexo及GitHub在Windows下搭建个人博客\"></a>基于Hexo及GitHub在Windows下搭建个人博客</h1><h2 id=\"Hexo安装\"><a href=\"#Hexo安装\" class=\"headerlink\" title=\"Hexo安装\"></a>Hexo安装</h2><p>Hexo<a href=\"https://hexo.io/zh-cn/\">官网</a>提供了一些<a href=\"https://hexo.io/zh-cn/docs/\">安装说明</a>，但是有些部分不够清晰，对新手不够友好。接下来我们在Windows环境下安装Hexo。</p>\n<p>我会先介绍Hexo如何安装，然后在后文再介绍如何进行配置Hexo以及如何安装主题，如何设置图床等。</p>\n<h3 id=\"Hexo安装前\"><a href=\"#Hexo安装前\" class=\"headerlink\" title=\"Hexo安装前\"></a>Hexo安装前</h3><p>在Hexo安装前需要安装下列环境：</p>\n<ul>\n<li><a href=\"https://nodejs.org/zh-cn/\">Node.js</a></li>\n<li><a href=\"https://git-scm.com/\">GIt</a></li>\n</ul>\n<h4 id=\"Node-js安装及验证\"><a href=\"#Node-js安装及验证\" class=\"headerlink\" title=\"Node.js安装及验证\"></a>Node.js安装及验证</h4><ol>\n<li><p>下载</p>\n<p>当前Node.js官网<a href=\"https://nodejs.org/zh-cn/\">https://nodejs.org/zh-cn/</a>所提供的下载版本为14.15.0，可直接<a href=\"https://nodejs.org/dist/v14.15.0/node-v14.15.0-x64.msi\">点击下载</a>。</p>\n</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102132645990.png\" alt=\"image-20201102132645990\"></p>\n<ol start=\"2\">\n<li><p>安装</p>\n<p>下载完成后，直接使用默认设置一直<code>next</code>就可以，安装路径自行更改。</p>\n</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102133232192.png\" alt=\"image-20201102133232192\"></p>\n<ol start=\"3\">\n<li><p>验证</p>\n<p>使用<code>WIN+R</code>打开运行，输入<code>cmd</code>，然后输入<code>npm -v</code>验证是否安装成功。如下图所示则没有问题。</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102133438956.png\" alt=\"image-20201102133438956\"></p>\n</li>\n</ol>\n<h4 id=\"Git安装\"><a href=\"#Git安装\" class=\"headerlink\" title=\"Git安装\"></a>Git安装</h4><ol>\n<li><p>下载</p>\n<p>Git下载页面为<a href=\"https://git-scm.com/downloads\">https://git-scm.com/downloads</a>，可直接<a href=\"https://github.com/git-for-windows/git/releases/download/v2.29.2.windows.1/Git-2.29.2-64-bit.exe\">点击下载</a>，下载2.29.2 64位版本。</p>\n</li>\n<li><p>安装</p>\n<p>如果有其他Git需求的用户可以搜索Git安装教程，如果没有其他需求直接默认配置安装。</p>\n</li>\n<li><p>验证</p>\n<p>安装完成后，重新打开cmd，输入<code>git --version</code>，应该出现如下提示。</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102134311394.png\" alt=\"image-20201102134311394\"></p>\n</li>\n<li><p>初始化配置</p>\n<p>首次安装git需要对git进行配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;halfcoke&quot;</span></span><br><span class=\"line\">git config --global user.email halfcoke@163.com</span><br></pre></td></tr></table></figure>\n\n<p>如果你后续想修改这个配置，可以重新执行一次，或者在<code>C:\\Users\\&lt;你的用户名&gt;\\.gitconfig</code>文件中修改</p>\n</li>\n</ol>\n<h3 id=\"Hexo安装-1\"><a href=\"#Hexo安装-1\" class=\"headerlink\" title=\"Hexo安装\"></a>Hexo安装</h3><p>Hexo需要在本地有一个文件夹，来存放与自己博客有关的内容，这个文件夹不能删除，之后写博客也需要继续用到，后续会说明如何在云端保存这个文件夹，现在我们主要说明如何安装Hexo。</p>\n<ol>\n<li><p>在一个你喜欢的地方新建一个文件夹</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102134745775.png\" alt=\"image-20201102134745775\"></p>\n</li>\n<li><p>安装Hexo</p>\n<p>我们可以使用<code>git bash</code>在这个文件夹中打开命令行窗口，或者使用<code>cmd</code>进入当前路径。然后输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>然后输入来验证安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo version</span><br></pre></td></tr></table></figure>\n\n<p>应该输出：</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102142055989.png\" alt=\"image-20201102142055989\"></p>\n</li>\n<li><p>初始化</p>\n<p>使用如下命令对Hexo进行初始化。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init your_blog_name</span><br><span class=\"line\"><span class=\"built_in\">cd</span> your_blog_name</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>验证安装</p>\n<p>依次执行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g  <span class=\"comment\"># 生成页面</span></span><br><span class=\"line\">hexo server <span class=\"comment\"># 在本地测试</span></span><br></pre></td></tr></table></figure>\n\n<p>最后应该会出现这样的提示：</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102142855559.png\" alt=\"image-20201102142855559\"></p>\n<p>在你的浏览器中输入<code>localhost:4000</code>。</p>\n<p>至此你的第一个页面应该生成完成了。</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102143050036.png\" alt=\"image-20201102143050036\"></p>\n<p>但是这页面也太简单了！！！</p>\n<p>好吧，接下来我们看一下如何进行配置，以及如何部署到GitHub上。</p>\n</li>\n</ol>\n<h2 id=\"Hexo部署到GitHub\"><a href=\"#Hexo部署到GitHub\" class=\"headerlink\" title=\"Hexo部署到GitHub\"></a>Hexo部署到GitHub</h2><p>为了连续性，我们先讲如何将Hexo部署到GitHub，这样后续配置完的页面你自己就会部署到GitHub上了。</p>\n<p>Hexo部署到GitHub非常简单，但是需要先在GitHub上创建属于自己的仓库。</p>\n<h3 id=\"GitHub相关\"><a href=\"#GitHub相关\" class=\"headerlink\" title=\"GitHub相关\"></a>GitHub相关</h3><p>如果你会GitHub相关的操作，那么直接创建一个你自己的公开仓库，然后跳到下一节，命名格式如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">your_repo.github.io   <span class=\"comment\"># 对 仓库名叫这个，&lt;your_repo&gt;设置为你自己GitHub的用户名</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你不会GitHub，往下看：</p>\n<ol>\n<li><p>进入<a href=\"https://github.com/\">GitHub</a>，注册属于自己的账号，或者直接点击到<a href=\"https://github.com/join?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=/&source=header-home\">注册页面</a>。</p>\n</li>\n<li><p>然后登录进去，按下图点击创建一个仓库</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102143936299.png\" alt=\"image-20201102143936299\"></p>\n</li>\n<li><p>在下图红框的位置填入自己GitHub的名字，后续可以直接通过这个域名访问自己的博客(当然也可以通过其他方式自定义，这个后续再说)。</p>\n<p>比如我的这个账号的就是<code>halfcokey</code></p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102151749812.png\" alt=\"image-20201102151749812\"></p>\n<p>关于GitHub就差不多这样了，接下来我们配置一下Hexo</p>\n</li>\n</ol>\n<h3 id=\"Hexo相关\"><a href=\"#Hexo相关\" class=\"headerlink\" title=\"Hexo相关\"></a>Hexo相关</h3><p>在我们刚才初始化Hexo的文件夹中，找到<code>_config.yml</code>，不要用记事本打开，你可以下载个<a href=\"https://code.visualstudio.com/\">VS Code</a>或者<a href=\"https://www.sublimetext.com/\">Sublime</a>等一类的都行。</p>\n<p>拉到最下面找到<code>deploy</code>，进行类似如下的配置，注意<code>yaml</code>文件依靠缩进，并且在<code>:</code>后有空格，一定要注意格式：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/halfcokey/halfcokey.github.io.git</span> <span class=\"comment\"># 你刚才新建的那个仓库的链接</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n\n<p>更详细的说明及配置可以<a href=\"https://hexo.io/zh-cn/docs/one-command-deployment#Git\">参考官网</a>。</p>\n<p>然后，在这个路径下打开<code>cmd</code>，执行如下命令安装部署插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><p>这个时候你可以执行如下命令来进行部署你的个人网站：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>应该可以弹出让你输入账号或者授权的页面，点击授权即可。</p>\n<p>这个时候，你就可以通过<code>&lt;your_repo&gt;.github.io</code>来访问你的页面了，比如我的就是<a href=\"https://halfcoke.github.io/\">halfcoke.github.io</a></p>\n<h2 id=\"Hexo安装及部署命令总结\"><a href=\"#Hexo安装及部署命令总结\" class=\"headerlink\" title=\"Hexo安装及部署命令总结\"></a>Hexo安装及部署命令总结</h2><p>如果你对上面执行的这些命令好奇，想查看具体说明的话，可以查看<a href=\"https://hexo.io/zh-cn/docs/commands\">官网</a></p>\n<p>这些命令在之后写文章可能也会用到，所以还是需要了解一下都是什么意思</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 初始化你的博客</span></span><br><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\"><span class=\"comment\"># 生成静态文件</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\"><span class=\"comment\"># 部署网站</span></span><br><span class=\"line\">hexo d</span><br><span class=\"line\"><span class=\"comment\">#################</span></span><br><span class=\"line\"><span class=\"comment\"># 这里是一些上面没有用到的命令，但之后可能会用到</span></span><br><span class=\"line\"><span class=\"comment\"># 新建一篇标题为title的文章，这默认放在source/_posts文件夹下</span></span><br><span class=\"line\">hexo n <span class=\"string\">&quot;title&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 清除缓存文件，如果更换主题等，建议执行一次</span></span><br><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure>\n\n<p>更详细的命令介绍请直接<a href=\"https://hexo.io/zh-cn/docs/commands\">点击官网</a>查看。</p>\n<h2 id=\"Hexo配置\"><a href=\"#Hexo配置\" class=\"headerlink\" title=\"Hexo配置\"></a>Hexo配置</h2><h3 id=\"基本配置\"><a href=\"#基本配置\" class=\"headerlink\" title=\"基本配置\"></a>基本配置</h3><p>Hexo配置项有很多内容，详细的可以查看<a href=\"https://hexo.io/zh-cn/docs/configuration\">官网</a>，下面我介绍一些我修改了的配置。在安装主题之后，还会再修改一些配置，我会在主题安装那里再介绍。</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">&#x27;CCCCCoke&#x27;</span> <span class=\"comment\"># 自己网站的名字</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh_cn</span> <span class=\"comment\"># 网站语言</span></span><br><span class=\"line\"><span class=\"attr\">timezone:</span> <span class=\"string\">&#x27;Asia/ShangHai&#x27;</span> <span class=\"comment\"># 时区</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://HalfCoke.github.io</span>  <span class=\"comment\"># 改成自己的地址</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Hexo本地文件夹上传\"><a href=\"#Hexo本地文件夹上传\" class=\"headerlink\" title=\"Hexo本地文件夹上传\"></a>Hexo本地文件夹上传</h2><p>我在部署Hexo的时候第一个问题就是如果我的Hexo文件夹丢失了怎么办。因为从GitHub上看到，通过<code>hexo d</code>上传的只有我们的静态页面，所以我们就需要将Hexo的文件夹上传到云端，这样我们换了一个环境后也能无差别的编辑自己的博客，而且最好方便管理而且别太麻烦。</p>\n<p>在这里我参考了网上其他人的做法，就是在存放自己博客的GitHub仓库新建一个分支<code>hexo</code>来存放这些文件。</p>\n<p>具体步骤如下：</p>\n<p>首先建议先创建<code>.editorconfig</code>文件，方便你在使用各种IDE编辑的时候配置统一，这里不做过多介绍，文件内容如下：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">root</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[*]</span></span><br><span class=\"line\"><span class=\"attr\">charset</span> = utf-<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"attr\">end_of_line</span> = lf</span><br></pre></td></tr></table></figure>\n\n<p>然后，在自己博客的目录(比如我的是<code>d:\\Blog\\blog_test</code>)，打开<code>cmd</code>或<code>git bash</code>，然后执行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init <span class=\"comment\"># 初始化git仓库</span></span><br><span class=\"line\">git add . <span class=\"comment\"># 将当前文件添加进去</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;init&quot;</span> <span class=\"comment\"># 在本地提交</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加远程仓库，注意将halfcokey替换为自己的用户名</span></span><br><span class=\"line\">git remote add origin https://github.com/halfcokey/halfcokey.github.io.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建分支，以后的文件直接在这个分支进行提交</span></span><br><span class=\"line\">git checkout -b <span class=\"string\">&quot;hexo&quot;</span> </span><br><span class=\"line\"><span class=\"comment\"># 将本地分支推送到远程仓库,并进行关联。</span></span><br><span class=\"line\">git push -u origin hexo</span><br></pre></td></tr></table></figure>\n\n<p>在之后修改文件，只需要执行如下命令即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -a -m <span class=\"string\">&quot;修改...&quot;</span> <span class=\"comment\"># 这里建议填写一些有意义的备注</span></span><br><span class=\"line\">git push origin hexo</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"MarkDown文章图片自动上传GitHub\"><a href=\"#MarkDown文章图片自动上传GitHub\" class=\"headerlink\" title=\"MarkDown文章图片自动上传GitHub\"></a>MarkDown文章图片自动上传GitHub</h2><p>在使用MarkDown编辑的博客的时候，如果文章中的图片数量比较少，还可以手动的将图片传到图床上，然后再添加图片链接。但如果你想放很多图片，手动就麻烦的要死。</p>\n<p>在这里我使用<a href=\"https://typora.io/\">Typora</a>+<a href=\"https://molunerfinn.com/PicGo/\">PicGo</a>的方式来管理文章的图片。</p>\n<p>这两个软件的安装过程比较简单，下面主要说一下我进行配置的相关的内容。</p>\n<h3 id=\"PicGo\"><a href=\"#PicGo\" class=\"headerlink\" title=\"PicGo\"></a>PicGo</h3><p>PicGo的配置方式比较容易，我们选择<code>GitHub图床</code></p>\n<p>看到我们需要填写<code>仓库名</code>、<code>分支名</code>、<code>Token</code>这些信息，下面我们分别介绍一下。</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164205931.png\" alt=\"image-20201102164205931\"></p>\n<ol>\n<li><p>仓库名</p>\n<p>我们可以新建一个仓库专门用来存放图片，新建仓库的方式与之前相同，但是这是我们的仓库名就没有那么多限制了，可以随便起，我的创建的仓库名是<a href=\"https://github.com/HalfCoke/blog_img\">blog_img</a>，然后在这个位置填入<code>&lt;用户名&gt;/&lt;仓库名&gt;</code></p>\n</li>\n<li><p>分支名</p>\n<p>默认使用master就行</p>\n</li>\n<li><p>Token</p>\n<p>在GitHub自己头像的位置点击<code>settings</code>，或者直接点击<a href=\"https://github.com/settings/profile\">https://github.com/settings/profile</a></p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164652421.png\" alt=\"image-20201102164652421\"></p>\n<p>然后点击<code>Developer settings-&gt;Personal access tokens</code>，或者直接点击<a href=\"https://github.com/settings/tokens\">https://github.com/settings/tokens</a></p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164803092.png\" alt=\"image-20201102164803092\"></p>\n<p>然后点击<code>Generate new token</code></p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102165048712.png\" alt=\"image-20201102165048712\"></p>\n<p>在Note的位置随便输入一个名字，下面的权限选第一个应该就行，如果前两个都选上。拉到最下面点击生成。</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102165252125.png\" alt=\"image-20201102165252125\"></p>\n<p>这时会有这样的提示，把这一串复制填写在PicGo的Token中，这样就可以了。</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102165419821.png\" alt=\"image-20201102165419821\"></p>\n</li>\n</ol>\n<h3 id=\"Typora\"><a href=\"#Typora\" class=\"headerlink\" title=\"Typora\"></a>Typora</h3><p><a href=\"https://typora.io/\">Typora</a>直接支持使用<a href=\"https://molunerfinn.com/PicGo/\">PicGo</a>。在<code>文件-&gt;偏好设置</code>中进行如下配置，主要是红框的位置</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164000589.png\" alt=\"image-20201102164000589\"></p>\n<p>然后当你打开一个MarkDown文件的时候，点击Typora的<code>格式-&gt;图像-&gt;当插入本地图片时-&gt;上传图片</code>就可以了。这样你放进来的图片就会自动上传到你的仓库中，而且链接也会替换成在线链接。</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"Hexo主题配置\"><a href=\"#Hexo主题配置\" class=\"headerlink\" title=\"Hexo主题配置\"></a>Hexo主题配置</h3><p>我所使用的主题是[<a href=\"https://github.com/Mrminfive/hexo-theme-skapp\">hexo-theme-skapp</a>]，作者提供了比较详细的配置过程，大家可以直接参考。</p>\n","site":{"data":{"contact":[{"title":"github","icon":"icon-github","link":"https://github.com/HalfCoke"},{"title":"email","icon":"icon-email","link":"mailto:halfcoke@163.com"}]}},"excerpt":"","more":"<h1 id=\"基于Hexo及GitHub在Windows下搭建个人博客\"><a href=\"#基于Hexo及GitHub在Windows下搭建个人博客\" class=\"headerlink\" title=\"基于Hexo及GitHub在Windows下搭建个人博客\"></a>基于Hexo及GitHub在Windows下搭建个人博客</h1><h2 id=\"Hexo安装\"><a href=\"#Hexo安装\" class=\"headerlink\" title=\"Hexo安装\"></a>Hexo安装</h2><p>Hexo<a href=\"https://hexo.io/zh-cn/\">官网</a>提供了一些<a href=\"https://hexo.io/zh-cn/docs/\">安装说明</a>，但是有些部分不够清晰，对新手不够友好。接下来我们在Windows环境下安装Hexo。</p>\n<p>我会先介绍Hexo如何安装，然后在后文再介绍如何进行配置Hexo以及如何安装主题，如何设置图床等。</p>\n<h3 id=\"Hexo安装前\"><a href=\"#Hexo安装前\" class=\"headerlink\" title=\"Hexo安装前\"></a>Hexo安装前</h3><p>在Hexo安装前需要安装下列环境：</p>\n<ul>\n<li><a href=\"https://nodejs.org/zh-cn/\">Node.js</a></li>\n<li><a href=\"https://git-scm.com/\">GIt</a></li>\n</ul>\n<h4 id=\"Node-js安装及验证\"><a href=\"#Node-js安装及验证\" class=\"headerlink\" title=\"Node.js安装及验证\"></a>Node.js安装及验证</h4><ol>\n<li><p>下载</p>\n<p>当前Node.js官网<a href=\"https://nodejs.org/zh-cn/\">https://nodejs.org/zh-cn/</a>所提供的下载版本为14.15.0，可直接<a href=\"https://nodejs.org/dist/v14.15.0/node-v14.15.0-x64.msi\">点击下载</a>。</p>\n</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102132645990.png\" alt=\"image-20201102132645990\"></p>\n<ol start=\"2\">\n<li><p>安装</p>\n<p>下载完成后，直接使用默认设置一直<code>next</code>就可以，安装路径自行更改。</p>\n</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102133232192.png\" alt=\"image-20201102133232192\"></p>\n<ol start=\"3\">\n<li><p>验证</p>\n<p>使用<code>WIN+R</code>打开运行，输入<code>cmd</code>，然后输入<code>npm -v</code>验证是否安装成功。如下图所示则没有问题。</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102133438956.png\" alt=\"image-20201102133438956\"></p>\n</li>\n</ol>\n<h4 id=\"Git安装\"><a href=\"#Git安装\" class=\"headerlink\" title=\"Git安装\"></a>Git安装</h4><ol>\n<li><p>下载</p>\n<p>Git下载页面为<a href=\"https://git-scm.com/downloads\">https://git-scm.com/downloads</a>，可直接<a href=\"https://github.com/git-for-windows/git/releases/download/v2.29.2.windows.1/Git-2.29.2-64-bit.exe\">点击下载</a>，下载2.29.2 64位版本。</p>\n</li>\n<li><p>安装</p>\n<p>如果有其他Git需求的用户可以搜索Git安装教程，如果没有其他需求直接默认配置安装。</p>\n</li>\n<li><p>验证</p>\n<p>安装完成后，重新打开cmd，输入<code>git --version</code>，应该出现如下提示。</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102134311394.png\" alt=\"image-20201102134311394\"></p>\n</li>\n<li><p>初始化配置</p>\n<p>首次安装git需要对git进行配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;halfcoke&quot;</span></span><br><span class=\"line\">git config --global user.email halfcoke@163.com</span><br></pre></td></tr></table></figure>\n\n<p>如果你后续想修改这个配置，可以重新执行一次，或者在<code>C:\\Users\\&lt;你的用户名&gt;\\.gitconfig</code>文件中修改</p>\n</li>\n</ol>\n<h3 id=\"Hexo安装-1\"><a href=\"#Hexo安装-1\" class=\"headerlink\" title=\"Hexo安装\"></a>Hexo安装</h3><p>Hexo需要在本地有一个文件夹，来存放与自己博客有关的内容，这个文件夹不能删除，之后写博客也需要继续用到，后续会说明如何在云端保存这个文件夹，现在我们主要说明如何安装Hexo。</p>\n<ol>\n<li><p>在一个你喜欢的地方新建一个文件夹</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102134745775.png\" alt=\"image-20201102134745775\"></p>\n</li>\n<li><p>安装Hexo</p>\n<p>我们可以使用<code>git bash</code>在这个文件夹中打开命令行窗口，或者使用<code>cmd</code>进入当前路径。然后输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>然后输入来验证安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo version</span><br></pre></td></tr></table></figure>\n\n<p>应该输出：</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102142055989.png\" alt=\"image-20201102142055989\"></p>\n</li>\n<li><p>初始化</p>\n<p>使用如下命令对Hexo进行初始化。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init your_blog_name</span><br><span class=\"line\"><span class=\"built_in\">cd</span> your_blog_name</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>验证安装</p>\n<p>依次执行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g  <span class=\"comment\"># 生成页面</span></span><br><span class=\"line\">hexo server <span class=\"comment\"># 在本地测试</span></span><br></pre></td></tr></table></figure>\n\n<p>最后应该会出现这样的提示：</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102142855559.png\" alt=\"image-20201102142855559\"></p>\n<p>在你的浏览器中输入<code>localhost:4000</code>。</p>\n<p>至此你的第一个页面应该生成完成了。</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102143050036.png\" alt=\"image-20201102143050036\"></p>\n<p>但是这页面也太简单了！！！</p>\n<p>好吧，接下来我们看一下如何进行配置，以及如何部署到GitHub上。</p>\n</li>\n</ol>\n<h2 id=\"Hexo部署到GitHub\"><a href=\"#Hexo部署到GitHub\" class=\"headerlink\" title=\"Hexo部署到GitHub\"></a>Hexo部署到GitHub</h2><p>为了连续性，我们先讲如何将Hexo部署到GitHub，这样后续配置完的页面你自己就会部署到GitHub上了。</p>\n<p>Hexo部署到GitHub非常简单，但是需要先在GitHub上创建属于自己的仓库。</p>\n<h3 id=\"GitHub相关\"><a href=\"#GitHub相关\" class=\"headerlink\" title=\"GitHub相关\"></a>GitHub相关</h3><p>如果你会GitHub相关的操作，那么直接创建一个你自己的公开仓库，然后跳到下一节，命名格式如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">your_repo.github.io   <span class=\"comment\"># 对 仓库名叫这个，&lt;your_repo&gt;设置为你自己GitHub的用户名</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你不会GitHub，往下看：</p>\n<ol>\n<li><p>进入<a href=\"https://github.com/\">GitHub</a>，注册属于自己的账号，或者直接点击到<a href=\"https://github.com/join?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=/&source=header-home\">注册页面</a>。</p>\n</li>\n<li><p>然后登录进去，按下图点击创建一个仓库</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102143936299.png\" alt=\"image-20201102143936299\"></p>\n</li>\n<li><p>在下图红框的位置填入自己GitHub的名字，后续可以直接通过这个域名访问自己的博客(当然也可以通过其他方式自定义，这个后续再说)。</p>\n<p>比如我的这个账号的就是<code>halfcokey</code></p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102151749812.png\" alt=\"image-20201102151749812\"></p>\n<p>关于GitHub就差不多这样了，接下来我们配置一下Hexo</p>\n</li>\n</ol>\n<h3 id=\"Hexo相关\"><a href=\"#Hexo相关\" class=\"headerlink\" title=\"Hexo相关\"></a>Hexo相关</h3><p>在我们刚才初始化Hexo的文件夹中，找到<code>_config.yml</code>，不要用记事本打开，你可以下载个<a href=\"https://code.visualstudio.com/\">VS Code</a>或者<a href=\"https://www.sublimetext.com/\">Sublime</a>等一类的都行。</p>\n<p>拉到最下面找到<code>deploy</code>，进行类似如下的配置，注意<code>yaml</code>文件依靠缩进，并且在<code>:</code>后有空格，一定要注意格式：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/halfcokey/halfcokey.github.io.git</span> <span class=\"comment\"># 你刚才新建的那个仓库的链接</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n\n<p>更详细的说明及配置可以<a href=\"https://hexo.io/zh-cn/docs/one-command-deployment#Git\">参考官网</a>。</p>\n<p>然后，在这个路径下打开<code>cmd</code>，执行如下命令安装部署插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><p>这个时候你可以执行如下命令来进行部署你的个人网站：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>应该可以弹出让你输入账号或者授权的页面，点击授权即可。</p>\n<p>这个时候，你就可以通过<code>&lt;your_repo&gt;.github.io</code>来访问你的页面了，比如我的就是<a href=\"https://halfcoke.github.io/\">halfcoke.github.io</a></p>\n<h2 id=\"Hexo安装及部署命令总结\"><a href=\"#Hexo安装及部署命令总结\" class=\"headerlink\" title=\"Hexo安装及部署命令总结\"></a>Hexo安装及部署命令总结</h2><p>如果你对上面执行的这些命令好奇，想查看具体说明的话，可以查看<a href=\"https://hexo.io/zh-cn/docs/commands\">官网</a></p>\n<p>这些命令在之后写文章可能也会用到，所以还是需要了解一下都是什么意思</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 初始化你的博客</span></span><br><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\"><span class=\"comment\"># 生成静态文件</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\"><span class=\"comment\"># 部署网站</span></span><br><span class=\"line\">hexo d</span><br><span class=\"line\"><span class=\"comment\">#################</span></span><br><span class=\"line\"><span class=\"comment\"># 这里是一些上面没有用到的命令，但之后可能会用到</span></span><br><span class=\"line\"><span class=\"comment\"># 新建一篇标题为title的文章，这默认放在source/_posts文件夹下</span></span><br><span class=\"line\">hexo n <span class=\"string\">&quot;title&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 清除缓存文件，如果更换主题等，建议执行一次</span></span><br><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure>\n\n<p>更详细的命令介绍请直接<a href=\"https://hexo.io/zh-cn/docs/commands\">点击官网</a>查看。</p>\n<h2 id=\"Hexo配置\"><a href=\"#Hexo配置\" class=\"headerlink\" title=\"Hexo配置\"></a>Hexo配置</h2><h3 id=\"基本配置\"><a href=\"#基本配置\" class=\"headerlink\" title=\"基本配置\"></a>基本配置</h3><p>Hexo配置项有很多内容，详细的可以查看<a href=\"https://hexo.io/zh-cn/docs/configuration\">官网</a>，下面我介绍一些我修改了的配置。在安装主题之后，还会再修改一些配置，我会在主题安装那里再介绍。</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">&#x27;CCCCCoke&#x27;</span> <span class=\"comment\"># 自己网站的名字</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh_cn</span> <span class=\"comment\"># 网站语言</span></span><br><span class=\"line\"><span class=\"attr\">timezone:</span> <span class=\"string\">&#x27;Asia/ShangHai&#x27;</span> <span class=\"comment\"># 时区</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://HalfCoke.github.io</span>  <span class=\"comment\"># 改成自己的地址</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Hexo本地文件夹上传\"><a href=\"#Hexo本地文件夹上传\" class=\"headerlink\" title=\"Hexo本地文件夹上传\"></a>Hexo本地文件夹上传</h2><p>我在部署Hexo的时候第一个问题就是如果我的Hexo文件夹丢失了怎么办。因为从GitHub上看到，通过<code>hexo d</code>上传的只有我们的静态页面，所以我们就需要将Hexo的文件夹上传到云端，这样我们换了一个环境后也能无差别的编辑自己的博客，而且最好方便管理而且别太麻烦。</p>\n<p>在这里我参考了网上其他人的做法，就是在存放自己博客的GitHub仓库新建一个分支<code>hexo</code>来存放这些文件。</p>\n<p>具体步骤如下：</p>\n<p>首先建议先创建<code>.editorconfig</code>文件，方便你在使用各种IDE编辑的时候配置统一，这里不做过多介绍，文件内容如下：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">root</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[*]</span></span><br><span class=\"line\"><span class=\"attr\">charset</span> = utf-<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"attr\">end_of_line</span> = lf</span><br></pre></td></tr></table></figure>\n\n<p>然后，在自己博客的目录(比如我的是<code>d:\\Blog\\blog_test</code>)，打开<code>cmd</code>或<code>git bash</code>，然后执行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init <span class=\"comment\"># 初始化git仓库</span></span><br><span class=\"line\">git add . <span class=\"comment\"># 将当前文件添加进去</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;init&quot;</span> <span class=\"comment\"># 在本地提交</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加远程仓库，注意将halfcokey替换为自己的用户名</span></span><br><span class=\"line\">git remote add origin https://github.com/halfcokey/halfcokey.github.io.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建分支，以后的文件直接在这个分支进行提交</span></span><br><span class=\"line\">git checkout -b <span class=\"string\">&quot;hexo&quot;</span> </span><br><span class=\"line\"><span class=\"comment\"># 将本地分支推送到远程仓库,并进行关联。</span></span><br><span class=\"line\">git push -u origin hexo</span><br></pre></td></tr></table></figure>\n\n<p>在之后修改文件，只需要执行如下命令即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -a -m <span class=\"string\">&quot;修改...&quot;</span> <span class=\"comment\"># 这里建议填写一些有意义的备注</span></span><br><span class=\"line\">git push origin hexo</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"MarkDown文章图片自动上传GitHub\"><a href=\"#MarkDown文章图片自动上传GitHub\" class=\"headerlink\" title=\"MarkDown文章图片自动上传GitHub\"></a>MarkDown文章图片自动上传GitHub</h2><p>在使用MarkDown编辑的博客的时候，如果文章中的图片数量比较少，还可以手动的将图片传到图床上，然后再添加图片链接。但如果你想放很多图片，手动就麻烦的要死。</p>\n<p>在这里我使用<a href=\"https://typora.io/\">Typora</a>+<a href=\"https://molunerfinn.com/PicGo/\">PicGo</a>的方式来管理文章的图片。</p>\n<p>这两个软件的安装过程比较简单，下面主要说一下我进行配置的相关的内容。</p>\n<h3 id=\"PicGo\"><a href=\"#PicGo\" class=\"headerlink\" title=\"PicGo\"></a>PicGo</h3><p>PicGo的配置方式比较容易，我们选择<code>GitHub图床</code></p>\n<p>看到我们需要填写<code>仓库名</code>、<code>分支名</code>、<code>Token</code>这些信息，下面我们分别介绍一下。</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164205931.png\" alt=\"image-20201102164205931\"></p>\n<ol>\n<li><p>仓库名</p>\n<p>我们可以新建一个仓库专门用来存放图片，新建仓库的方式与之前相同，但是这是我们的仓库名就没有那么多限制了，可以随便起，我的创建的仓库名是<a href=\"https://github.com/HalfCoke/blog_img\">blog_img</a>，然后在这个位置填入<code>&lt;用户名&gt;/&lt;仓库名&gt;</code></p>\n</li>\n<li><p>分支名</p>\n<p>默认使用master就行</p>\n</li>\n<li><p>Token</p>\n<p>在GitHub自己头像的位置点击<code>settings</code>，或者直接点击<a href=\"https://github.com/settings/profile\">https://github.com/settings/profile</a></p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164652421.png\" alt=\"image-20201102164652421\"></p>\n<p>然后点击<code>Developer settings-&gt;Personal access tokens</code>，或者直接点击<a href=\"https://github.com/settings/tokens\">https://github.com/settings/tokens</a></p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164803092.png\" alt=\"image-20201102164803092\"></p>\n<p>然后点击<code>Generate new token</code></p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102165048712.png\" alt=\"image-20201102165048712\"></p>\n<p>在Note的位置随便输入一个名字，下面的权限选第一个应该就行，如果前两个都选上。拉到最下面点击生成。</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102165252125.png\" alt=\"image-20201102165252125\"></p>\n<p>这时会有这样的提示，把这一串复制填写在PicGo的Token中，这样就可以了。</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102165419821.png\" alt=\"image-20201102165419821\"></p>\n</li>\n</ol>\n<h3 id=\"Typora\"><a href=\"#Typora\" class=\"headerlink\" title=\"Typora\"></a>Typora</h3><p><a href=\"https://typora.io/\">Typora</a>直接支持使用<a href=\"https://molunerfinn.com/PicGo/\">PicGo</a>。在<code>文件-&gt;偏好设置</code>中进行如下配置，主要是红框的位置</p>\n<p><img src=\"https://raw.githubusercontent.com/HalfCoke/blog_img/master/img/image-20201102164000589.png\" alt=\"image-20201102164000589\"></p>\n<p>然后当你打开一个MarkDown文件的时候，点击Typora的<code>格式-&gt;图像-&gt;当插入本地图片时-&gt;上传图片</code>就可以了。这样你放进来的图片就会自动上传到你的仓库中，而且链接也会替换成在线链接。</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"Hexo主题配置\"><a href=\"#Hexo主题配置\" class=\"headerlink\" title=\"Hexo主题配置\"></a>Hexo主题配置</h3><p>我所使用的主题是[<a href=\"https://github.com/Mrminfive/hexo-theme-skapp\">hexo-theme-skapp</a>]，作者提供了比较详细的配置过程，大家可以直接参考。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckh0e1mg200016ksm8is2gupf","category_id":"ckh0e1mg500026ksmerj808zx","_id":"ckh0e1mg700056ksmeg8d52yo"}],"PostTag":[{"post_id":"ckh0e1mg200016ksm8is2gupf","tag_id":"ckh0e1mg600036ksmezk87nuw","_id":"ckh0e1mg800086ksmejf20voq"},{"post_id":"ckh0e1mg200016ksm8is2gupf","tag_id":"ckh0e1mg700046ksm5eou59w9","_id":"ckh0e1mg800096ksm8lqlb0qr"},{"post_id":"ckh0e1mg200016ksm8is2gupf","tag_id":"ckh0e1mg800066ksm8wt2bmzl","_id":"ckh0e1mg8000a6ksm1q16exre"},{"post_id":"ckh0e1mg200016ksm8is2gupf","tag_id":"ckh0e1mg800076ksm94gz62cn","_id":"ckh0e1mg9000b6ksm2vd204lh"}],"Tag":[{"name":"Hexo","_id":"ckh0e1mg600036ksmezk87nuw"},{"name":"GitHub","_id":"ckh0e1mg700046ksm5eou59w9"},{"name":"Windows","_id":"ckh0e1mg800066ksm8wt2bmzl"},{"name":"图床","_id":"ckh0e1mg800076ksm94gz62cn"}]}}